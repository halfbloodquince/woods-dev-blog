.container {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0%;
  left: 0%;
}

.blur {
  width: 400px;
  height: 400px;
  position: fixed;
  transform: translate(-50%, -50%);
  left: 51%;
  top: 72%;
  border-radius: 50%;
  animation: rotate 15s linear infinite;
  z-index: 1;
  background: linear-gradient(55deg, hotpink, 35%, rgb(17, 17, 255), aquamarine);
  transition: 0.1s;
}

.blurCover {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 2;
  backdrop-filter: blur(150px);
  opacity: 1;
}

@keyframes rotate {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
    left: 51%;
    top: 72%;
  }
  50% {
    transform: translate(-50%, -50%) rotate(180deg) scale(1.5, 1);
    left: 55%;
    top: 77%;
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
    left: 51%;
    top: 72%;
  }
}

/* ball */

.ball {
  width: 280px;
  height: 280px;
  position: fixed;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
  border-radius: 50%;
  background: linear-gradient(55deg, hotpink, 35%, rgb(17, 17, 255), aquamarine);
  animation: rotateBall 15s linear infinite;
  z-index: 3;
}

@keyframes rotateBall {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.home {
  background: linear-gradient(55deg, hotpink, 35%, rgb(17, 17, 255), aquamarine);
}

@property --myColor1 {
  syntax: "<color>";
  initial-value: hotpink;
  inherits: false;
}

@property --myColor2 {
  syntax: "<color>";
  initial-value: rgb(17, 17, 255);
  inherits: false;
}

@property --myColor3 {
  syntax: "<color>";
  initial-value: rgb(17, 255, 223);
  inherits: false;
}

.gameBall {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: gameBall 3s linear forwards, rotateBall 15s linear infinite;
}

.reactBall {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: reactBall 3s linear forwards, rotateBall 15s linear infinite;
}

.threeBall {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: threeBall 3s linear forwards, rotateBall 15s linear infinite;
}

.gameBlur {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: gameBall 3s linear forwards, rotate 15s linear infinite;
}

.reactBlur {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: reactBall 3s linear forwards, rotate 15s linear infinite;
}

.threeBlur {
  background: linear-gradient(55deg, var(--myColor1), 35%, var(--myColor2), var(--myColor3));
  animation: threeBall 3s linear forwards, rotate 15s linear infinite;
}

@keyframes gameBall {
  0% {
    --myColor1: hotpink;
    --myColor2: rgb(17, 17, 255);
    --myColor3: aquamarine;
  }

  100% {
    --myColor1: rgb(255, 0, 0);
    --myColor2: rgb(158, 39, 255);
    --myColor3: rgb(230, 2, 255);
  }
}

@keyframes reactBall {
  0% {
    --myColor1: hotpink;
    --myColor2: rgb(17, 17, 255);
    --myColor3: aquamarine;
  }

  100% {
    --myColor1: rgb(23, 54, 255);
    --myColor2: rgb(18, 207, 144);
    --myColor3: rgb(104, 185, 246);
  }
}

@keyframes threeBall {
  from {
    --myColor1: hotpink;
    --myColor2: rgb(17, 17, 255);
    --myColor3: aquamarine;
  }

  to {
    --myColor1: rgb(255, 139, 23);
    --myColor2: rgb(251, 54, 54);
    --myColor3: rgb(64, 67, 253);
  }
}
